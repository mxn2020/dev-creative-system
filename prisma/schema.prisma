// prisma/schema.prisma

// This is your Prisma schema file for MongoDB
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// 
// Note: Better Auth handles authentication-related models (users, sessions, etc.)
// This schema is for your application's data models only

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Kids Todo App Models
model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  completed   Boolean  @default(false)
  emoji       String   @default("üìù")
  stars       Int      @default(10)
  dueDate     DateTime?
  userId      String   // References Better Auth user ID
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  emoji       String
  color       String   @default("#3b82f6")
  description String?
  userId      String   // References Better Auth user ID
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Reward {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  emoji       String
  cost        Int      // Cost in stars
  type        String   // "badge", "theme", "emoji_pack", "celebration"
  unlocked    Boolean  @default(false)
  userId      String   // References Better Auth user ID
  unlockedAt  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Achievement {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  emoji       String
  type        String   // "tasks_completed", "stars_earned", "streak", "category_master"
  requirement Int      // Number needed to unlock (e.g., 10 tasks, 100 stars)
  earned      Boolean  @default(false)
  userId      String   // References Better Auth user ID
  earnedAt    DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// User preferences for the kids todo app
model UserPreference {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @unique // Better Auth user ID
  theme             String   @default("rainbow") // "rainbow", "ocean", "forest", "space"
  soundEnabled      Boolean  @default(true)
  celebrationStyle  String   @default("confetti") // "confetti", "fireworks", "sparkles"
  parentalControls  Boolean  @default(false)
  dailyGoal         Int      @default(3) // Number of tasks to complete daily
  reminderTime      String?  // Time for daily reminders (HH:MM format)
  favoriteEmoji     String   @default("‚≠ê")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// Streak tracking for motivation
model Streak {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @unique // Better Auth user ID
  currentStreak Int      @default(0)
  longestStreak Int      @default(0)
  lastActiveDate DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Daily stats for progress tracking
model DailyStats {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   // Better Auth user ID
  date            DateTime @db.Date
  tasksCompleted  Int      @default(0)
  starsEarned     Int      @default(0)
  timeSpent       Int      @default(0) // Minutes spent in app
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([userId, date])
}

// Parental controls and family sharing
model FamilyMember {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  childUserId String  // Better Auth user ID of the child
  parentUserId String // Better Auth user ID of the parent
  role       String   @default("parent") // "parent", "guardian", "sibling"
  permissions String[] @default(["view_progress", "create_tasks"]) // Array of permissions
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([childUserId, parentUserId])
}

// App settings for the kids todo system
model AppSetting {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  key       String   @unique
  value     String
  type      String   @default("string") // "string" | "number" | "boolean" | "json"
  category  String   @default("general") // "general", "rewards", "achievements", "ui"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}